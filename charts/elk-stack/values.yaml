# ElasticSearch values
es-master:
  nodeGroup: "master"
  roles:
    master: "true"
    ingest: "false"
    data: "false"

  replicas: 1
  minimumMasterNodes: 1
  clusterHealthCheckParams: 'wait_for_status=yellow&timeout=1s'

  esJavaOpts: "-Xmx1g -Xms1g" #Scaleable values

  resources:
    requests: {}
      # cpu: "500m"
      # memory: "512Mi"
    limits: {}
      # cpu: "1000m"
      # memory: "1536Mi"

  volumeClaimTemplate:
    accessModes: ["ReadWriteOnce"]
    storageClassName: "standard"
    resources:
      requests:
        storage: 2Gi

  sysctlInitContainer:
    enabled: false

es-data:
  nodeGroup: "data"
  roles:
    master: "false"
    ingest: "false"
    data: "true"

  replicas: 1
  minimumMasterNodes: 1
  clusterHealthCheckParams: 'wait_for_status=yellow&timeout=1s'

  esJavaOpts: "-Xmx1g -Xms1g"

  resources:
    requests: {}
      # cpu: "500m"
      # memory: "512Mi"
    limits: {}
      # cpu: "1000m"
      # memory: "1536Mi"

  volumeClaimTemplate:
    accessModes: ["ReadWriteOnce"]
    storageClassName: "standard"
    resources:
      requests:
        storage: 2Gi

  sysctlInitContainer:
    enabled: false

es-client:
  nodeGroup: "client"
  roles:
    master: "false"
    ingest: "true"
    data: "false"

  replicas: 1
  minimumMasterNodes: 1
  clusterHealthCheckParams: 'wait_for_status=yellow&timeout=1s'

  esJavaOpts: "-Xmx1g -Xms1g" #Scaleable values

  resources:
    requests: {}
      # cpu: "500m"
      # memory: "512Mi"
    limits: {}
      # cpu: "1000m"
      # memory: "1536Mi"

  persistence:
    enabled: false

# Logstash values
logstash:
  extraEnvs:
    - name: ELASTICSEARCH_HOST
      value: "elasticsearch-client"
    - name: ELASTICSEARCH_PORT
      value: "9200"

  extraPorts:
    - name: beats
      containerPort: 5044

  service:
    annotations: {}
    type: ClusterIP
    ports:
      - name: beats
        port: 5044
        protocol: TCP
        targetPort: beats

# Kibana values
kibana:
  elasticsearchHosts: "http://elasticsearch-client:9200"

  readinessProbe:
    initialDelaySeconds: 60

  resources:
    requests: {}
      # cpu: "500m"
      # memory: "512Mi"
    limits: {}
      # cpu: "1000m"
      # memory: "1Gi"

  extraEnvs:
    - name: "NODE_OPTIONS"
      value: "--max-old-space-size=1800"
    - name: "LOGGING_QUIET"
      value: "false"

  updateStrategy:
    type: "RollingUpdate"

  ingress:
    enabled: false
    # className: ""
    # annotations:
    #   ingress.kubernetes.io/rewrite-target: /
    #   kubernetes.io/ingress.class: nginx
    # hosts:
    #  - host: kubernetes.docker.internal
    #    paths:
    #      - path: /


# Filebeat values
filebeat:
  readinessProbe:
    initialDelaySeconds: 60

  extraEnvs:
    - name: ELASTICSEARCH_HOST
      value: "elasticsearch-client"
    - name: ELASTICSEARCH_PORT
      value: "9200"
